{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class ReactiveFormsComponent {\n  constructor() {\n    this.form = new FormGroup({\n      firstname: new FormControl('', Validators.required),\n      lastname: new FormControl('', Validators.required),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.minLength(8)]),\n      repeatPassword: new FormControl('', [Validators.required, Validators.minLength(8)])\n    });\n  }\n  onSubmit() {\n    if (!this.form.valid) {\n      alert('Errors Detected');\n    }\n    console.log(this.form.value);\n  }\n  controlError(controlName) {\n    const control = this.form.get(controlName);\n    if (control) {\n      if (control.errors) {\n        return control.errors;\n      }\n    }\n    return null;\n  }\n}\nReactiveFormsComponent.ɵfac = function ReactiveFormsComponent_Factory(t) {\n  return new (t || ReactiveFormsComponent)();\n};\nReactiveFormsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ReactiveFormsComponent,\n  selectors: [[\"app-reactive-forms\"]],\n  decls: 33,\n  vars: 3,\n  consts: [[1, \"row\"], [1, \"col\"], [1, \"d-flex\", \"flex-column\", \"gap-2\", 3, \"formGroup\"], [1, \"form-group\"], [\"for\", \"firstname\", 1, \"col-form-label\"], [\"type\", \"text\", \"id\", \"firstname\", \"formControlName\", \"firstname\", 1, \"form-control\"], [\"for\", \"lastname\", 1, \"col-form-label\"], [\"type\", \"text\", \"id\", \"lastname\", \"formControlName\", \"firstname\", 1, \"form-control\"], [\"for\", \"email\", 1, \"col-form-label\"], [\"type\", \"text\", \"id\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"for\", \"password\", 1, \"col-form-label\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [\"for\", \"repeatPassword\", 1, \"col-form-label\"], [\"type\", \"password\", \"id\", \"repeatPassword\", \"formControlName\", \"repeatPassword\", 1, \"form-control\"], [1, \"btn\", \"btn-primary\", 3, \"click\"]],\n  template: function ReactiveFormsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2)(3, \"div\", 3)(4, \"label\", 4);\n      i0.ɵɵtext(5, \"First Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 3)(8, \"label\", 6);\n      i0.ɵɵtext(9, \"Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 3)(12, \"label\", 8);\n      i0.ɵɵtext(13, \"First Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 3)(16, \"label\", 10);\n      i0.ɵɵtext(17, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 3)(20, \"label\", 12);\n      i0.ɵɵtext(21, \"First Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"input\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 3)(24, \"button\", 14);\n      i0.ɵɵlistener(\"click\", function ReactiveFormsComponent_Template_button_click_24_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtext(25, \" Submit Form \");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(26, \"div\", 1)(27, \"p\");\n      i0.ɵɵtext(28);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"p\");\n      i0.ɵɵtext(30);\n      i0.ɵɵelement(31, \"br\");\n      i0.ɵɵtext(32, \" First Name: Errors: \");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(26);\n      i0.ɵɵtextInterpolate1(\" Form Valid: \", ctx.form.valid, \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" First Name: \", ctx.form.controls.firstname.value, \" \");\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;AAOnE,OAAM,MAAOC,sBAAsB;EALnCC;IAME,SAAI,GAAG,IAAIH,SAAS,CAAC;MACnBI,SAAS,EAAE,IAAIL,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACI,QAAQ,CAAC;MACnDC,QAAQ,EAAE,IAAIP,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACI,QAAQ,CAAC;MAClDE,KAAK,EAAE,IAAIR,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACI,QAAQ,EAAEJ,UAAU,CAACM,KAAK,CAAC,CAAC;MACnEC,QAAQ,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAE,CAC5BE,UAAU,CAACI,QAAQ,EACnBJ,UAAU,CAACQ,SAAS,CAAC,CAAC,CAAC,CACxB,CAAC;MACFC,cAAc,EAAG,IAAIX,WAAW,CAAC,EAAE,EAAE,CACnCE,UAAU,CAACI,QAAQ,EACnBJ,UAAU,CAACQ,SAAS,CAAC,CAAC,CAAC,CACxB;KACF,CAAC;;EAEFE,QAAQ;IACN,IAAI,CAAC,IAAI,CAACC,IAAI,CAACC,KAAK,EAAE;MACpBC,KAAK,CAAC,iBAAiB,CAAC;;IAE1BC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,IAAI,CAACK,KAAK,CAAC;EAC9B;EAEAC,YAAY,CAACC,WAAmB;IAC9B,MAAMC,OAAO,GAAG,IAAI,CAACR,IAAI,CAACS,GAAG,CAACF,WAAW,CAAC;IAC1C,IAAIC,OAAO,EAAE;MACX,IAAIA,OAAO,CAACE,MAAM,EAAE;QAClB,OAAOF,OAAO,CAACE,MAAM;;;IAGzB,OAAO,IAAI;EACb;;AA9BWpB,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAAqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCRnCC,8BAAiB;MAO6CA,0BAAU;MAAAA,iBAAQ;MAChEA,2BAI6B;MACjCA,iBAAM;MAGNA,8BAAwB;MACyBA,yBAAS;MAAAA,iBAAQ;MAC9DA,4BAI6B;MACjCA,iBAAM;MAGNA,+BAAwB;MACsBA,2BAAU;MAAAA,iBAAQ;MAC5DA,4BAIyB;MAC7BA,iBAAM;MAGLA,+BAAwB;MACwBA,yBAAQ;MAAAA,iBAAQ;MAC7DA,6BAI4B;MAChCA,iBAAM;MAGLA,+BAAwB;MAC8BA,2BAAU;MAAAA,iBAAQ;MACrEA,6BAIkC;MACtCA,iBAAM;MAGNA,+BAAwB;MACZA;QAAA,OAAWC,cAAU;MAAA,EAAC;MAC1BD,8BACJ;MAAAA,iBAAS;MAKrBA,+BAAiB;MACTA,aAA6B;MAAAA,iBAAI;MACrCA,0BAAG;MACCA,aAAgD;MAAAA,sBAAI;MACpDA,sCACJ;MAAAA,iBAAI;;;MAlEEA,eAAkB;MAAlBA,oCAAkB;MA8DpBA,gBAA6B;MAA7BA,2DAA6B;MAE7BA,eAAgD;MAAhDA,8EAAgD","names":["FormControl","FormGroup","Validators","ReactiveFormsComponent","constructor","firstname","required","lastname","email","password","minLength","repeatPassword","onSubmit","form","valid","alert","console","log","value","controlError","controlName","control","get","errors","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Asus\\Documents\\workspace\\angular-introduction1\\src\\app\\reactive-forms\\reactive-forms.component.ts","C:\\Users\\Asus\\Documents\\workspace\\angular-introduction1\\src\\app\\reactive-forms\\reactive-forms.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-reactive-forms',\n  templateUrl: './reactive-forms.component.html',\n  styleUrls: ['./reactive-forms.component.css']\n})\nexport class ReactiveFormsComponent {\n  form = new FormGroup({\n    firstname: new FormControl('', Validators.required),\n    lastname: new FormControl('', Validators.required),\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8),\n    ]),\n    repeatPassword : new FormControl('', [\n      Validators.required,\n      Validators.minLength(8),\n    ]),\n  })\n\n  onSubmit() {\n    if (!this.form.valid) {\n      alert('Errors Detected');\n    }\n    console.log(this.form.value)\n  }\n\n  controlError(controlName: string) {\n    const control = this.form.get(controlName);\n    if (control) {\n      if (control.errors) {\n        return control.errors\n      }\n    }\n    return null;\n  }\n}\n","<div class=\"row\">\n    <div class=\"col\">\n\n        <form [formGroup]=\"form\" class=\"d-flex flex-column gap-2\">\n\n            <!-- First Name -->\n            <div class=\"form-group\">\n                <label for=\"firstname\" class=\"col-form-label\">First Name</label>\n                <input\n                type=\"text\"\n                id=\"firstname\"\n                class=\"form-control\"\n                formControlName=\"firstname\"/>\n            </div>\n\n            <!-- Last Name -->\n            <div class=\"form-group\">\n                <label for=\"lastname\" class=\"col-form-label\">Last Name</label>\n                <input\n                type=\"text\"\n                id=\"lastname\"\n                class=\"form-control\"\n                formControlName=\"firstname\"/>\n            </div>\n\n            <!-- Email -->\n            <div class=\"form-group\">\n                <label for=\"email\" class=\"col-form-label\">First Name</label>\n                <input\n                type=\"text\"\n                id=\"email\"\n                class=\"form-control\"\n                formControlName=\"email\"/>\n            </div>\n\n             <!-- Password -->\n             <div class=\"form-group\">\n                <label for=\"password\" class=\"col-form-label\">Password</label>\n                <input\n                type=\"password\"\n                id=\"password\"\n                class=\"form-control\"\n                formControlName=\"password\"/>\n            </div>\n\n             <!-- Repeat Password -->\n             <div class=\"form-group\">\n                <label for=\"repeatPassword\" class=\"col-form-label\">First Name</label>\n                <input\n                type=\"password\"\n                id=\"repeatPassword\"\n                class=\"form-control\"\n                formControlName=\"repeatPassword\"/>\n            </div>\n\n            <!-- Submit -->\n            <div class=\"form-group\">\n                <button (click) = \"onSubmit()\" class=\"btn btn-primary\">\n                    Submit Form\n                </button>\n            </div>\n        </form>\n\n    </div>\n    <div class=\"col\">\n        <p> Form Valid: {{ form.valid }} </p>\n        <p>\n            First Name: {{ form.controls.firstname.value }} <br>\n            First Name: Errors:\n        </p>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}